scala.reflect.internal.AnnotationInfos$AnnotationInfo.tpe
scala.reflect.internal.Constants$Constant.<init>
scala.reflect.internal.Constants$Constant.tpe
scala.reflect.internal.Constants$Constant.value
scala.reflect.internal.Definitions$DefinitionsClass.ByNameParamClass
scala.reflect.internal.Definitions$DefinitionsClass.FunctionClass
scala.reflect.internal.Definitions$DefinitionsClass.JavaRepeatedParamClass
scala.reflect.internal.Definitions$DefinitionsClass.NilModule
scala.reflect.internal.Definitions$DefinitionsClass.NothingClass
scala.reflect.internal.Definitions$DefinitionsClass.NothingTpe
scala.reflect.internal.Definitions$DefinitionsClass.RepeatedParamClass
scala.reflect.internal.Definitions$DefinitionsClass.ScalaPackage
scala.reflect.internal.Definitions$DefinitionsClass.TupleClass
scala.reflect.internal.Definitions.definitions
scala.reflect.internal.FlagSets$Flag.TRAIT
scala.reflect.internal.FlagSets.Flag
scala.reflect.internal.FlagSets.NoFlags
scala.reflect.internal.Mirrors$RootsBase.EmptyPackage
scala.reflect.internal.Mirrors$RootsBase.EmptyPackageClass
scala.reflect.internal.Mirrors$RootsBase.RootClass
scala.reflect.internal.Mirrors$RootsBase.staticClass
scala.reflect.internal.Names$Name.decoded
scala.reflect.internal.Names$Name.encodedName
scala.reflect.internal.Names$Name.isTermName
scala.reflect.internal.Names$Name.isTypeName
scala.reflect.internal.Names$Name.toTermName
scala.reflect.internal.Names$Name.toTypeName
scala.reflect.internal.Names$TermName.toTermName
scala.reflect.internal.Names.newTermName
scala.reflect.internal.Names.newTypeName
scala.reflect.internal.Positions.atPos
scala.reflect.internal.Positions.NoPosition
scala.reflect.internal.Positions.wrappingPos
scala.reflect.internal.Scopes.newScopeWith
scala.reflect.internal.StdAttachments.BackquotedIdentifierAttachment
scala.reflect.internal.StdNames$CommonNames.EMPTY
scala.reflect.internal.StdNames$CommonNames.ERROR
scala.reflect.internal.StdNames$CommonNames.PACKAGE
scala.reflect.internal.StdNames$CommonNames.WILDCARD
scala.reflect.internal.StdNames$TermNames.CONSTRUCTOR
scala.reflect.internal.StdNames$TermNames.LOCAL_SUFFIX_STRING
scala.reflect.internal.StdNames$TermNames.ROOTPKG
scala.reflect.internal.StdNames$TypeNames.WILDCARD_STAR
scala.reflect.internal.StdNames.nme
scala.reflect.internal.StdNames.tpnme
scala.reflect.internal.Symbols$Symbol.annotations
scala.reflect.internal.Symbols$Symbol.companionModule
scala.reflect.internal.Symbols$Symbol.effectiveOwner
scala.reflect.internal.Symbols$Symbol.exists
scala.reflect.internal.Symbols$Symbol.fullName
scala.reflect.internal.Symbols$Symbol.hasAllFlags
scala.reflect.internal.Symbols$Symbol.hasFlag
scala.reflect.internal.Symbols$Symbol.info
scala.reflect.internal.Symbols$Symbol.isErroneous
scala.reflect.internal.Symbols$Symbol.isNonBottomSubClass
scala.reflect.internal.Symbols$Symbol.isPackageClass
scala.reflect.internal.Symbols$Symbol.isStatic
scala.reflect.internal.Symbols$Symbol.name
scala.reflect.internal.Symbols$Symbol.orElse
scala.reflect.internal.Symbols$Symbol.owner
scala.reflect.internal.Symbols$Symbol.suchThat
scala.reflect.internal.Symbols$Symbol.tpe
scala.reflect.internal.Symbols$Symbol.tpeHK
scala.reflect.internal.Symbols$SymbolContextApiImpl.newNestedSymbol
scala.reflect.internal.Symbols$SymbolContextApiImpl.typeSignature
scala.reflect.internal.Symbols$TermSymbol.isOverloaded
scala.reflect.internal.Symbols.ClassSymbolTag
scala.reflect.internal.Symbols.newFreeTermSymbol
scala.reflect.internal.Symbols.newFreeTypeSymbol
scala.reflect.internal.Symbols.NoSymbol
scala.reflect.internal.SymbolTable.abort
scala.reflect.internal.SymbolTable.mirrorThatLoaded
scala.reflect.internal.Trees$Alternative.trees
scala.reflect.internal.Trees$Annotated.<init>
scala.reflect.internal.Trees$Annotated.annot
scala.reflect.internal.Trees$Annotated.arg
scala.reflect.internal.Trees$AppliedTypeTree.<init>
scala.reflect.internal.Trees$AppliedTypeTree.args
scala.reflect.internal.Trees$AppliedTypeTree.tpt
scala.reflect.internal.Trees$Apply.<init>
scala.reflect.internal.Trees$Apply.args
scala.reflect.internal.Trees$Apply.fun
scala.reflect.internal.Trees$Assign.<init>
scala.reflect.internal.Trees$Assign.lhs
scala.reflect.internal.Trees$Assign.rhs
scala.reflect.internal.Trees$AssignOrNamedArg.<init>
scala.reflect.internal.Trees$AssignOrNamedArg.lhs
scala.reflect.internal.Trees$AssignOrNamedArg.rhs
scala.reflect.internal.Trees$Bind.<init>
scala.reflect.internal.Trees$Bind.body
scala.reflect.internal.Trees$Bind.name
scala.reflect.internal.Trees$Block.<init>
scala.reflect.internal.Trees$Block.expr
scala.reflect.internal.Trees$Block.stats
scala.reflect.internal.Trees$CaseDef.<init>
scala.reflect.internal.Trees$CaseDef.body
scala.reflect.internal.Trees$CaseDef.guard
scala.reflect.internal.Trees$CaseDef.pat
scala.reflect.internal.Trees$ClassDef.<init>
scala.reflect.internal.Trees$ClassDef.impl
scala.reflect.internal.Trees$ClassDef.mods
scala.reflect.internal.Trees$ClassDef.name
scala.reflect.internal.Trees$ClassDef.tparams
scala.reflect.internal.Trees$CompoundTypeTree.<init>
scala.reflect.internal.Trees$CompoundTypeTree.templ
scala.reflect.internal.Trees$DefDef.<init>
scala.reflect.internal.Trees$DefDef.mods
scala.reflect.internal.Trees$DefDef.name
scala.reflect.internal.Trees$DefDef.rhs
scala.reflect.internal.Trees$DefDef.tparams
scala.reflect.internal.Trees$DefDef.tpt
scala.reflect.internal.Trees$DefDef.vparamss
scala.reflect.internal.Trees$ExistentialTypeTree.<init>
scala.reflect.internal.Trees$ExistentialTypeTree.tpt
scala.reflect.internal.Trees$ExistentialTypeTree.whereClauses
scala.reflect.internal.Trees$Function.<init>
scala.reflect.internal.Trees$Function.body
scala.reflect.internal.Trees$Function.unapply
scala.reflect.internal.Trees$Function.vparams
scala.reflect.internal.Trees$Ident.<init>
scala.reflect.internal.Trees$Ident.isBackquoted
scala.reflect.internal.Trees$Ident.name
scala.reflect.internal.Trees$Import.<init>
scala.reflect.internal.Trees$Import.expr
scala.reflect.internal.Trees$Import.selectors
scala.reflect.internal.Trees$ImportSelector.<init>
scala.reflect.internal.Trees$ImportSelector.name
scala.reflect.internal.Trees$ImportSelector.namePos
scala.reflect.internal.Trees$ImportSelector.rename
scala.reflect.internal.Trees$ImportSelector.renamePos
scala.reflect.internal.Trees$Literal.<init>
scala.reflect.internal.Trees$Literal.value
scala.reflect.internal.Trees$Match.<init>
scala.reflect.internal.Trees$Match.cases
scala.reflect.internal.Trees$Match.selector
scala.reflect.internal.Trees$MemberDef.mods
scala.reflect.internal.Trees$Modifiers.<init>
scala.reflect.internal.Trees$Modifiers.annotations
scala.reflect.internal.Trees$Modifiers.flags
scala.reflect.internal.Trees$Modifiers.hasFlag
scala.reflect.internal.Trees$Modifiers.privateWithin
scala.reflect.internal.Trees$ModuleDef.<init>
scala.reflect.internal.Trees$ModuleDef.impl
scala.reflect.internal.Trees$ModuleDef.mods
scala.reflect.internal.Trees$ModuleDef.name
scala.reflect.internal.Trees$New.tpt
scala.reflect.internal.Trees$PackageDef.<init>
scala.reflect.internal.Trees$PackageDef.pid
scala.reflect.internal.Trees$PackageDef.stats
scala.reflect.internal.Trees$RefTree.name
scala.reflect.internal.Trees$RefTree.qualifier
scala.reflect.internal.Trees$Select.<init>
scala.reflect.internal.Trees$Select.name
scala.reflect.internal.Trees$Select.qualifier
scala.reflect.internal.Trees$SelectFromTypeTree.<init>
scala.reflect.internal.Trees$SelectFromTypeTree.name
scala.reflect.internal.Trees$SelectFromTypeTree.qualifier
scala.reflect.internal.Trees$SingletonTypeTree.<init>
scala.reflect.internal.Trees$SingletonTypeTree.ref
scala.reflect.internal.Trees$Super.<init>
scala.reflect.internal.Trees$SymTree.symbol
scala.reflect.internal.Trees$Template.<init>
scala.reflect.internal.Trees$Template.body
scala.reflect.internal.Trees$Template.parents
scala.reflect.internal.Trees$Template.self
scala.reflect.internal.Trees$This.<init>
scala.reflect.internal.Trees$Tree.copyAttrs
scala.reflect.internal.Trees$Tree.duplicate
scala.reflect.internal.Trees$Tree.isDef
scala.reflect.internal.Trees$Tree.isEmpty
scala.reflect.internal.Trees$Tree.isTerm
scala.reflect.internal.Trees$Tree.isType
scala.reflect.internal.Trees$Tree.pos
scala.reflect.internal.Trees$Tree.setSymbol
scala.reflect.internal.Trees$Tree.setType
scala.reflect.internal.Trees$Tree.symbol
scala.reflect.internal.Trees$Tree.tpe
scala.reflect.internal.Trees$TreeContextApiImpl.equalsStructure
scala.reflect.internal.Trees$TreeContextApiImpl.exists
scala.reflect.internal.Trees$Try.<init>
scala.reflect.internal.Trees$Try.unapply
scala.reflect.internal.Trees$TypeApply.<init>
scala.reflect.internal.Trees$TypeApply.args
scala.reflect.internal.Trees$TypeApply.fun
scala.reflect.internal.Trees$Typed.<init>
scala.reflect.internal.Trees$Typed.expr
scala.reflect.internal.Trees$Typed.tpt
scala.reflect.internal.Trees$TypeDef.mods
scala.reflect.internal.Trees$TypeDef.name
scala.reflect.internal.Trees$TypeDef.rhs
scala.reflect.internal.Trees$TypeDef.tparams
scala.reflect.internal.Trees$TypeTree.<init>
scala.reflect.internal.Trees$TypeTree.original
scala.reflect.internal.Trees$TypeTree.setOriginal
scala.reflect.internal.Trees$UnApply.args
scala.reflect.internal.Trees$UnApply.fun
scala.reflect.internal.Trees$ValDef.<init>
scala.reflect.internal.Trees$ValDef.mods
scala.reflect.internal.Trees$ValDef.name
scala.reflect.internal.Trees$ValDef.rhs
scala.reflect.internal.Trees$ValDef.tpt
scala.reflect.internal.Trees$ValOrDefDef.rhs
scala.reflect.internal.Trees.EmptyTree
scala.reflect.internal.Trees.emptyValDef
scala.reflect.internal.Trees.Function
scala.reflect.internal.Trees.Ident
scala.reflect.internal.Trees.New
scala.reflect.internal.Trees.Select
scala.reflect.internal.Trees.This
scala.reflect.internal.Trees.Try
scala.reflect.internal.Trees.TypeTree
scala.reflect.internal.Types$AnnotatedType.<init>
scala.reflect.internal.Types$AnnotatedType.annotations
scala.reflect.internal.Types$AnnotatedType.underlying
scala.reflect.internal.Types$BoundedWildcardType.<init>
scala.reflect.internal.Types$ClassInfoType.<init>
scala.reflect.internal.Types$ConstantType.apply
scala.reflect.internal.Types$ConstantType.value
scala.reflect.internal.Types$ExistentialType.<init>
scala.reflect.internal.Types$MethodType.<init>
scala.reflect.internal.Types$MethodType.params
scala.reflect.internal.Types$MethodType.resultType
scala.reflect.internal.Types$NullaryMethodType.<init>
scala.reflect.internal.Types$PolyType.<init>
scala.reflect.internal.Types$PolyType.resultType
scala.reflect.internal.Types$RefinedType.apply
scala.reflect.internal.Types$RefinedType.parents
scala.reflect.internal.Types$SingleType.apply
scala.reflect.internal.Types$SingleType.pre
scala.reflect.internal.Types$SingleType.sym
scala.reflect.internal.Types$SuperType.apply
scala.reflect.internal.Types$ThisType.apply
scala.reflect.internal.Types$ThisType.sym
scala.reflect.internal.Types$Type.$less$colon$less
scala.reflect.internal.Types$Type.dealias
scala.reflect.internal.Types$Type.isError
scala.reflect.internal.Types$Type.isStable
scala.reflect.internal.Types$Type.isVolatile
scala.reflect.internal.Types$Type.member
scala.reflect.internal.Types$Type.memberType
scala.reflect.internal.Types$Type.typeSymbol
scala.reflect.internal.Types$Type.widen
scala.reflect.internal.Types$TypeApiImpl.declaration
scala.reflect.internal.Types$TypeBounds.apply
scala.reflect.internal.Types$TypeRef.apply
scala.reflect.internal.Types$TypeRef.pre
scala.reflect.internal.Types$TypeRef.sym
scala.reflect.internal.Types.ConstantType
scala.reflect.internal.Types.NoPrefix
scala.reflect.internal.Types.NoType
scala.reflect.internal.Types.RefinedType
scala.reflect.internal.Types.SingleType
scala.reflect.internal.Types.singleType
scala.reflect.internal.Types.SuperType
scala.reflect.internal.Types.ThisType
scala.reflect.internal.Types.TypeBounds
scala.reflect.internal.Types.TypeRef
scala.reflect.internal.util.OffsetPosition.<init>
scala.reflect.internal.util.Position.end
scala.reflect.internal.util.Position.focus
scala.reflect.internal.util.Position.isRange
scala.reflect.internal.util.Position.makeTransparent
scala.reflect.internal.util.Position.point
scala.reflect.internal.util.Position.show
scala.reflect.internal.util.Position.source
scala.reflect.internal.util.Position.start
scala.reflect.internal.util.Position.union
scala.reflect.internal.util.Position.withPoint
scala.reflect.internal.util.Position.withStart
scala.reflect.internal.util.RangePosition.<init>
scala.reflect.internal.util.TransparentPosition.<init>
